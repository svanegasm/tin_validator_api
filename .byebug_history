exit
tin.match?(/^\d{2}[A-Za-z0-9]{10}\d[A-Za-z]\d$/)
tin.test(/\d{2}[A-Z]{5}\d{4}[A-Z]{1}[A-Z\d]{1}[Z]{1}[A-Z\d]{1}/)
tin.match?(/\d{2}[A-Z]{5}\d{4}[A-Z]{1}[A-Z\d]{1}[Z]{1}[A-Z\d]{1}/)
tin.match?(/^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}Z[0-9A-Z]{1}$/)
tin.match?(/^\d{2}[A-Z0-9]{10}[A-Z]\d[A-Z]$/i)
country_code
tin
tin.match?(GST_REGEXP)
tin
GST_REGEXP
exit
valid_tin?
tin_type
exit
json_response
exit
response.status
json_response
cont
exit
response.body
json_response
exit
response.status
json_response
cont
tin_type
exit
tin
      end
        end
          'acn' if tin.length == 9
          'abn' if tin.length == 11
        @tin_type ||= begin
def tin_type
tin_type
@tin_type
tin_type
tin.length == 11
tin.length
tin_type
exit
json_response
exit
json_response
exit
tin.match?(/(\d{2})(\d{3})(\d{3})(\d{3})/)
tin.match?(/^\d{2} \d{3} \d{3} \d{3}$/)
tin.match(/^\d{2} \d{3} \d{3} \d{3}$/)
tin.length
tin
tin.match?(ACN_REGEXP)
tin.match?(/\A\d{2} \d{3} \d{3} \d{3}\z/)
tin.match?(/\A\d{3} \d{3} \d{3}\z/)
tin.match?(ABN_REGEXP)
tin.length
ABN_REGEXP
exit
resolver.new(tin.gsub(/\s+/, '')).validate
tin.gsub(/\s+/, '')
tin
country_code
resolver
exit
validation_response = validate_tin
exit
result = ::Tin::Validates::Index.call(tin: index_params[:tin], country_code: index_params[:country_code])
exit
result.errors
result = ::Tin::Validates::Index.call(tin: index_params[:tin], country_code: index_params[:country_code])
exit
result = ::Tin::Validates::Index.call(tin: index_params[:tin], country_code: index_params[:country_code])
exit
result = ::Tin::Validates::Index.call(tin: index_params[:tin], country_code: index_params[:country_code])
exit
result = ::Tin::Validates::Index.call(tin: index_params[:tin], country_code: index_params[:country_code])
result = Tin::Validates::Index.call(tin: index_params[:tin], country_code: index_params[:country_code])
exit
::Tin::Validates::Index.call(tin: index_params[:tin], country_code: index_params[:country_code])
index_params
exit
response.body
response
response.status
